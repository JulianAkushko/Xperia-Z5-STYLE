#ASSERT
assert(getprop("ro.product.device") == "D2303" || getprop("ro.build.product") == "D2303" ||
	getprop("ro.product.device") == "eagle" || getprop("ro.build.product") == "eagle" ||
	getprop("ro.product.device") == "D2302" || getprop("ro.build.product") == "D2302" ||
	getprop("ro.product.device") == "D2305" || getprop("ro.build.product") == "D2305" ||
	getprop("ro.product.device") == "D2306" || getprop("ro.build.product") == "D2306" ||
	getprop("ro.product.device") == "D2403" || getprop("ro.build.product") == "D2403" ||
	getprop("ro.product.device") == "D2406" || getprop("ro.build.product") == "D2406" ||
	getprop("ro.product.device") == "XPERIA M2" || getprop("ro.build.product") == "XPERIA M2" ||
	abort("This package is for \"D2303,eagle,D2302,D2305,D2306,D2403,D2406\" devices; this is a \"" + getprop("ro.product.device") + "\"."););
unmount("/system");
unmount("/data");
show_progress(1.000000, 0);
ui_print("");
ui_print("");
ui_print("=============================================");
ui_print("__   __                _         ___________ ");
ui_print("\ \ / /               (_)       |___  / ____|");
ui_print(" \ V / _ __   ___ _ __ _  __ _     / /| |__  ");
ui_print("  > < | '_ \ / _ \ '__| |/ _` |   / / |___ \ ");
ui_print(" / . \| |_) |  __/ |  | | (_| |  / /__ ___) |");
ui_print("/_/ \_\ .__/ \___|_|  |_|\__,_| /_____|____/ ");
ui_print("      | |                                    ");
ui_print("     _|_|_ _________     ___      ______     ");
ui_print("    / ____|__   __\ \   / / |    |  ____|    ");
ui_print("   | (___    | |   \ \_/ /| |    | |__       ");
ui_print("    \___ \   | |    \   / | |    |  __|      ");
ui_print("    ____) |  | |     | |  | |____| |____     ");
ui_print("   |_____/   |_|     |_|  |______|______|    ");
ui_print("                                             ");
ui_print("=============================================");
ui_print("      BETA 3 - 4.5b3 - 26 FEBRUARY 2015      ");
ui_print("=============================================");
ui_print("");
ui_print("");
ui_print("");
ui_print("Mounting System");
mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system");
set_progress(0.100000);
ui_print("Cleaning up App, Framework and Media");
ui_print("");
delete_recursive("/system/app");
delete_recursive("/system/framework");
delete_recursive("/system/priv-app");
delete_recursive("/system/vendor/app");
delete_recursive("/system/media");
set_progress(0.200000);
ui_print("Extracting System...");
ui_print("");
package_extract_dir("system", "/system");
set_progress(0.400000);
ui_print("Setting Permissions...");
#PERM
set_perm_recursive(0, 0, 0755, 0644, "/system/app");
set_perm_recursive(0, 0, 0755, 0644, "/system/framework");
set_perm_recursive(0, 0, 0755, 0644, "/system/priv-app");
set_perm_recursive(0, 0, 0755, 0644, "/system/media");
set_progress(0.500000);
package_extract_file("common/busybox", "/tmp/busybox");
set_perm(0, 0, 0755, "/tmp/busybox");
package_extract_file("common/buildprop.sh", "/tmp/buildprop.sh");
set_perm(0, 0, 0755, "/tmp/buildprop.sh");
package_extract_dir("common/buildprop", "/tmp/buildprop");
run_program("/tmp/buildprop.sh");
ui_print("");
ui_print("Now I'll install for you: ");
ui_print("MultiRecovery, SuperSU, RIC disabler");
ui_print("Please... BE PATIENT!");
###MR08
ui_print(" - Installing MultiRecovery 0.8 - ");
ui_print("Replacing stock script...");
package_extract_file("common/chargemon", "/tmp/chargemon");
package_extract_file("common/script.sh", "/tmp/script.sh");
package_extract_file("common/copybinary.sh", "/tmp/copybinary.sh");
set_perm(0, 0, 0755, "/tmp/chargemon");
set_perm(0, 0, 0755, "/tmp/script.sh");
set_perm(0, 0, 0755, "/tmp/copybinary.sh");
assert(run_program("/tmp/copybinary.sh") == "0");
set_progress(0.600000);
ui_print("Extracting MultiRecovery files to system...");
package_extract_file("common/mr08/bin/cwm.cpio", "/system/bin/cwm.cpio");
package_extract_file("common/mr08/bin/philz.cpio", "/system/bin/philz.cpio");
package_extract_file("common/mr08/bin/twrp.cpio", "/system/bin/twrp.cpio");
package_extract_file("common/mr08/bin/recovery.sh", "/system/bin/recovery.sh");
package_extract_file("common/mr08/xbin/busybox", "/system/xbin/busybox");
set_progress(0.700000);
ui_print("Preparing Byeselinux support");
package_extract_file("common/byeselinux.sh", "/tmp/byeselinux.sh");
package_extract_file("common/byeselinux.ko", "/tmp/byeselinux.ko");
package_extract_file("common/modulecrcpatch", "/tmp/modulecrcpatch");
set_perm(0, 0, 0755, "/tmp/byeselinux.sh");
set_perm(0, 0, 0755, "/tmp/modulecrcpatch");
run_program("/tmp/byeselinux.sh");
ui_print("Correcting file permissions...");
set_perm(0, 2000, 0644, "/system/bin/twrp.cpio");
set_perm(0, 2000, 0644, "/system/bin/philz.cpio");
set_perm(0, 2000, 0644, "/system/bin/cwm.cpio");
set_perm(0, 2000, 0755, "/system/bin/recovery.sh");
set_perm(0, 2000, 0755, "/system/xbin/busybox");
#package_extract_file("common/mrota.sh", "/tmp/mrota.sh");
#set_perm(0, 0, 0755, "/tmp/mrota.sh");
#run_program("/tmp/mrota.sh");
###RIC
ui_print(" - Installing RIC Disabler - ");
ui_print("Extracting files...");
package_extract_file("common/modulecrcpatch", "/tmp/modulecrcpatch");
package_extract_file("common/installmount.sh", "/tmp/installmount.sh");
package_extract_file("common/wp_mod.ko", "/tmp/wp_mod.ko");
set_perm(0, 0, 0755, "/tmp/modulecrcpatch");
set_perm(0, 0, 0755, "/tmp/installmount.sh");
set_perm(0, 0, 0644, "/tmp/wp_mod.ko");
set_progress(0.800000);
#Below lines should be in MultiRecovery installation place but since it's useful for some so it's also installed
#now to patch the RIC
set_progress(0.850000);
ui_print("Patching kernel module");
if
	run_program("/tmp/busybox", "ls", "/system/lib/modules/scsi_wait_scan.ko") != "0"
then
        abort("Error finding scsi module");
else
	set_progress(0.900000);
	if
		#todo: dynamically check for kernel modules to read crc
		run_program("/tmp/modulecrcpatch", "/system/lib/modules/scsi_wait_scan.ko", "/tmp/wp_mod.ko") != "0"
	then
		abort("Error patching kernel module");
	else
		set_progress(0.600000);
		run_program("/tmp/busybox", "cp", "/tmp/wp_mod.ko", "/system/lib/modules/wp_mod.ko");
        set_perm(0, 2000, 0644, "/system/lib/modules/wp_mod.ko");
		set_progress(0.700000);		
		assert(run_program("/tmp/installmount.sh") == "0");
		set_progress(0.800000);
	endif;
endif;
set_progress(0.950000);
###SuperSU
ui_print(" - Installing SuperSU - ");
package_extract_dir("common/supersu", "/tmp/supersu");
run_program("/tmp/busybox", "unzip", "/tmp/supersu/supersu.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
run_program("/tmp/busybox", "sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
ui_print("Cleaning up...");
ifelse(is_mounted("/system") == "/system", unmount("/system"));
delete_recursive("/tmp/");
set_progress(1.000000);
ui_print("Finished!");
ui_print("Please note:");
ui_print("Bugs from dirty flashes won't be attended.");
ui_print("Wipe Data and/or Dalvik if needed.");
ui_print("Z5 S.T.Y.L.E. Installed");
